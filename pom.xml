<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.jikewang</groupId>
  <artifactId>flinkdemo</artifactId>
  <version>1.0</version>

  <name>flinkdemo</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <java.version>1.8</java.version>
    <flink.version>1.11.1</flink.version>
    <flink.scala.version>2.11</flink.scala.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.30</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.23</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.60</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.21</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.10</version>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-table-api-java-bridge_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- Either... (for the old planner that was available before Flink 1.9) -->
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-table-planner_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- or.. (for the new Blink planner) -->
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-table-planner-blink_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-java</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-jdbc_${flink.scala.version}</artifactId>
      <version>1.7.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-streaming-java_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-streaming-scala_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-clients_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-walkthrough-common_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-connector-kafka_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.bahir</groupId>
      <artifactId>flink-connector-redis_${flink.scala.version}</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-connector-elasticsearch6_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-statebackend-rocksdb_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-runtime-web_${flink.scala.version}</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-csv</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-avro</artifactId>
      <version>${flink.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.flink</groupId>
      <artifactId>flink-json</artifactId>
      <version>${flink.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>flinkdemo</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>*.pfx</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
          <nonFilteredFileExtensions>
            <nonFilteredFileExtension>pem</nonFilteredFileExtension>
            <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
          </nonFilteredFileExtensions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.jikewang.flink.WordCount</mainClass>
                </transformer>
              </transformers>
              <artifactSet>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <environment>dev</environment>
        <!-- kafka -->
        <kafka.bootstrap.servers>10.255.33.89:9092</kafka.bootstrap.servers>
        <kafka.topic>logstash</kafka.topic>
        <kafka.group.id>themis</kafka.group.id>
        <!-- redis -->
        <redis.cluster.nodes>
          10.255.33.163:9001,10.255.33.163:9002,10.255.33.163:9003,10.255.33.163:9004,10.255.33.163:9005,10.255.33.163:9006
        </redis.cluster.nodes>
        <redis.cluster.password>Redis9001</redis.cluster.password>
        <!-- hbase -->
        <hbase.server.url>10.255.33.3,10.255.33.4,10.255.33.5</hbase.server.url>
        <hbase.server.port>2181</hbase.server.port>
        <!-- mysql -->
        <db.driverClassName>com.mysql.jdbc.Driver</db.driverClassName>
        <db.filters>stat</db.filters>
        <db.initialSize>5</db.initialSize>
        <db.maxActive>10</db.maxActive>
        <db.minIdle>5</db.minIdle>
        <db.maxWait>60000</db.maxWait>
        <!--yotta-->
        <yotta.db.url>jdbc:mysql://10.255.33.9/dev_hermes</yotta.db.url>
        <yotta.db.username>dev</yotta.db.username>
        <yotta.db.password>dev</yotta.db.password>
        <!--thread-->
        <thread.db.url>jdbc:mysql://10.255.33.7/tmp_qa_cp01</thread.db.url>
        <thread.db.username>test</thread.db.username>
        <thread.db.password>test@2016</thread.db.password>
      </properties>
    </profile>
    <profile>
      <id>sa</id>
      <properties>
        <environment>sa</environment>
        <!-- kafka -->
        <kafka.bootstrap.servers>172.16.2.233:9092,172.16.2.234:9092,172.16.2.235:9092,172.16.2.236:9092</kafka.bootstrap.servers>
        <kafka.topic>ksana_oasis_db</kafka.topic>
        <kafka.group.id>sql_test_1</kafka.group.id>
        <!-- redis -->
        <redis.cluster.nodes>
          172.16.2.233:9001,172.16.2.233:9002,172.16.2.234:9001,172.16.2.234:9002,172.16.2.235:9001,172.16.2.235:9002,172.16.2.236:9001,172.16.2.236:9002
        </redis.cluster.nodes>
        <redis.cluster.password></redis.cluster.password>
        <!-- hbase -->
        <hbase.server.url>172.16.2.232,172.16.2.233,172.16.2.234,172.16.2.235,172.16.2.236</hbase.server.url>
        <hbase.server.port>2181</hbase.server.port>
        <!--mysql-->
        <db.driverClassName>com.mysql.jdbc.Driver</db.driverClassName>
        <db.filters>stat</db.filters>
        <db.initialSize>5</db.initialSize>
        <db.maxActive>10</db.maxActive>
        <db.minIdle>5</db.minIdle>
        <db.maxWait>60000</db.maxWait>
        <!--yotta-->
        <yotta.db.url>jdbc:mysql://172.16.2.152:3306/hermes</yotta.db.url>
        <yotta.db.username>dwuser</yotta.db.username>
        <yotta.db.password>m8P7sppammbsmeqJIDuP</yotta.db.password>
        <!--thread-->
        <thread.db.url>jdbc:mysql://172.16.2.139:3309/thread</thread.db.url>
        <thread.db.username>dwuser</thread.db.username>
        <thread.db.password>m8P7sppammbsmeqJIDuP</thread.db.password>
        <!--oasis-->
        <oasis.db.url>jdbc:mysql://172.16.2.85:3306/oasis</oasis.db.url>
        <oasis.db.username>ksana_analyzer</oasis.db.username>
        <oasis.db.password>rxGG2fcDYt1KF8zvB7Ml</oasis.db.password>
      </properties>
    </profile>
  </profiles>
</project>
